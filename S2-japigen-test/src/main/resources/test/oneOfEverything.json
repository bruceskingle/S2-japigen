{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Japigen Test Types",
    "license": {
      "name": "Apache2"
    }
  },
  "x-japigen-id": "https://github.com/bruceskingle/S2-japigen/blob/master/S2-japigen-test/src/main/resources/test/oneOfEverything.json",
  "x-japigen-model": {
    "javaGenPackage":  "com.symphony.s2.japigen.test.oneofeverything",
    "javaFacadePackage":  "com.symphony.s2.japigen.test.oneofeverything.facade"
  },
  "paths": {},
  "components": {
    "schemas": {
      "DefInt": {
        "description": "A default integer.",
        "type": "integer"
      },
      "Int64": {
        "description": "A 64 bit integer.",
        "type": "integer",
        "format": "int64"
      },
      "Int64Min": {
        "description": "A 64 bit integer with a minimum.",
        "type": "integer",
        "format": "int64",
        "minimum": -123
      },
      "Int64Max": {
        "description": "A 64 bit integer with a maximum.",
        "type": "integer",
        "format": "int64",
        "maximum": 80000
      },
      "Int64MinMax": {
        "description": "A 64 bit integer with a minimum and maximum.",
        "type": "integer",
        "format": "int64",
        "minimum": -123,
        "maximum": 80000
      },
      
      "Int32": {
        "description": "A 32 bit integer.",
        "type": "integer",
        "format": "int32"
      },
      "Int32Min": {
        "description": "A 32 bit integer with a minimum.",
        "type": "integer",
        "format": "int32",
        "minimum": -123
      },
      "Int32Max": {
        "description": "A 32 bit integer with a maximum.",
        "type": "integer",
        "format": "int32",
        "maximum": 80000
      },
      "Int32MinMax": {
        "description": "A 32 bit integer with a minimum and maximum.",
        "type": "integer",
        "format": "int32",
        "minimum": -123,
        "maximum": 80000
      },
      
      "DefDouble": {
        "description": "A default double.",
        "type": "number"
      },
      "DoubleNoLimits": {
        "description": "A Double.",
        "type": "number",
        "format": "double"
      },
      "DoubleMin": {
        "description": "A Double with a minimum.",
        "type": "number",
        "format": "double",
        "minimum": -123.25
      },
      "DoubleMax": {
        "description": "A Double with a maximum.",
        "type": "number",
        "format": "double",
        "maximum": 80000.25
      },
      "DoubleMinMax": {
        "description": "A Double with a minimum and maximum.",
        "type": "number",
        "format": "double",
        "minimum": -123.25,
        "maximum": 80000.25
      },
      
      "DefFloat": {
        "description": "A Float.",
        "type": "number",
        "format": "float"
      },
      "FloatMin": {
        "description": "A Float with a minimum.",
        "type": "number",
        "format": "float",
        "minimum": -123.25
      },
      "FloatMax": {
        "description": "A Float with a maximum.",
        "type": "number",
        "format": "float",
        "maximum": 80000.25
      },
      "FloatMinMax": {
        "description": "A Float with a minimum and maximum.",
        "type": "number",
        "format": "float",
        "minimum": -123.25,
        "maximum": 80000.25
      },
      
      "DefString": {
        "description": "A default String.",
        "type": "string"
      },
      "StringOfBytes": {
        "description": "A byte String.",
        "type": "string",
        "format": "byte"
      },
      
      "ListOfByteString": {
        "description": "A list of byte String.",
        "type": "array",
        "x-japigen-cardinality": "LIST",
        "minItems": 1,
        "maxItems": 5,
        "items": {
          "description": "A byte String list element.",
          "type": "string",
          "format": "byte"
        }
      },
      
      "SetOfFloatMinMax": {
        "description": "A set of byte String.",
        "type": "array",
        "x-japigen-cardinality": "SET",
        "items": {
          "$ref": "#/components/schemas/FloatMinMax"
        }
      },
      
      "ASimpleObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      
      "ObjectWithOneOfEverything": {
        "description": "An object with one field of every type.",
        "type": "object",
        "required": [
          "secs"
        ],
        "properties": {
          "aBoolean": {
            "description": "A boolean.",
            "type": "boolean"
          },
          "aByteString": {
            "description": "A byte String.",
            "type": "string",
            "format": "byte"
          },
          "secs": {
            "description": "Seconds measured from the standard Java epoch of 1970-01-01T00:00:00Z where instants after the epoch have positive values, and earlier instants have negative values.",
            "type": "integer",
            "format": "int64"
          },
          "aFloat": {
            "description": "A float",
            "type": "number",
            "format": "float",
            "minimum": -77723.00025,
            "maximum": 7650000.00025
          },
          "aDouble": {
            "description": "A float",
            "type": "number",
            "format": "double",
            "minimum": -765546546547723.03330025,
            "maximum": 7665465456464550000.00333025
          },
          "aDoubleMinMax": {
            "$ref": "#/components/schemas/DoubleMinMax"
          },
          "aSetOfByteString": {
            "description": "A set of byte String.",
            "type": "array",
            "x-japigen-cardinality": "SET",
            "items": {
              "description": "A byte String array element.",
              "type": "string",
              "format": "byte"
            }
          },
          "aListOfByteString": {
            "description": "A list of byte String.",
            "type": "array",
            "minItems": 1,
            "maxItems": 5,
            "items": {
              "description": "A byte String array element.",
              "type": "string",
              "format": "byte"
            }
          },
          "nanos": {
            "description": "Nanosecond-of-second, which will always be between 0 and 999,999,999",
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "aHash": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      },
      "Hash": {
        "description": "A Hash value, encoded as Base64.",
        "type": "string",
        "format": "byte",
        "x-japigen-attributes": {
          "javaExternalPackage":  "org.symphonyoss.s2.japigen.test.oneofeverything",
          "javaExternalType":     "TestHash"
        }
      },
      
      "anAllOf": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DoubleMinMax"
          },
          {
            "$ref": "#/components/schemas/Int64MinMax"
          },
          {
            "type": "object",
            "required": [
              "aFloat"
            ],
            "properties": {
              "aFloat": {
                "description": "A float",
                "type": "number",
                "format": "double"
              },
              "aHash": {
                "$ref": "#/components/schemas/Hash"
              }
            }
          }
        ]
      },
      
      "EitherFloatOrInt": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FloatMinMax"
          },
          {
            "$ref": "#/components/schemas/Int32MinMax"
          }
        ],
        "discriminator": {
          "propertyName": "floatOrIntType"
        }
      },
      
      "PetResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Cat"
          },
          {
            "$ref": "#/components/schemas/Dog"
          },
          {
            "$ref": "#/components/schemas/Lizard"
          }
        ],
        "discriminator": {
          "propertyName": "petType",
          "mapping": {
            "cachorro": "Dog"
          }
        }
      },
      
      "Pet": {
        "type": "object",
        "discriminator": {
          "propertyName": "petType"
        },
        "properties": {
          "name": {
            "type": "string"
          },
          "petType": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "petType"
        ]
      },
      "Cat": {
        "description": "A representation of a cat. Note that `Cat` will be used as the discriminator value.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pet"
          },
          {
            "type": "object",
            "properties": {
              "huntingSkill": {
                "type": "string",
                "description": "The measured skill for hunting",
                "default": "lazy",
                "enum": [
                  "clueless",
                  "lazy",
                  "adventurous",
                  "aggressive"
                ]
              }
            },
            "required": [
              "huntingSkill"
            ]
          }
        ]
      },
      "Dog": {
        "description": "A representation of a dog. Note that `Dog` will be used as the discriminator value.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pet"
          },
          {
            "type": "object",
            "properties": {
              "packSize": {
                "type": "integer",
                "format": "int32",
                "description": "the size of the pack the dog is from",
                "default": 0,
                "minimum": 0
              }
            },
            "required": [
              "packSize"
            ]
          }
        ]
      },
      "Lizard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pet"
          },
          {
            "type": "object",
            "properties": {
              "lovesRocks": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "NestedObject": {
        "description": "An object with a field of type oneOf.",
        "type": "object",
        "required": [
          "outerNestedObject"
        ],
        "properties": {
          "yetAnotherBoolean": {
            "description": "A boolean.",
            "type": "boolean"
          },
          "outerNestedObject": {
            "type": "object",
            "required": [
              "innerNestedObject"
            ],
            "properties": {
              "outerName": {
                "type": "string"
              },
              "outerValue": {
                "type": "string"
              },
              "innerNestedObject": {
                "type": "object",
                "properties": {
                  "innerName": {
                    "type": "string"
                  },
                  "innerValue": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "FundamentalObject": {
        "description": "An object with a field of type oneOf.",
        "type": "object",
        "required": [
          "fundamentalPayloadType"
        ],
        "properties": {
          "anotherBoolean": {
            "description": "A boolean.",
            "type": "boolean"
          },
          "fundamentalPayloadType": {
            "type": "string"
          },
          "fundamentalPayload": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DoubleMinMax"
              },
              {
                "$ref": "#/components/schemas/Int64MinMax"
              }
            ],
            "discriminator": {
              "propertyName": "fundamentalPayloadType"
            }
          }
        }
      }
    }
  }
}